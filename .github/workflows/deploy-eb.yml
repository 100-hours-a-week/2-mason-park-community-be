name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - eb

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 레포지토리 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. AWS CLI 자격 증명 설정
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. AWS ECR Docker 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Docker 이미지 빌드 및 ECR 푸시
      - name: Build and Push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --platform linux/amd64 .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # 5. Dockerrun.aws.json 생성
      - name: Dockerrun.aws.json 생성
        run: |
          echo '{
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "'${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPO }}:latest'",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": "8080",
                "HostPort": "80"
              }
            ]
          }' > Dockerrun.aws.json

      # 6. 시간 얻어오기
      - name: Get Current Time
        id: current-time
        run: |
          echo "::set-output name=formattedTime::$(date +'%Y-%m-%dT%H-%M-%S')"

      # 7. 배포 패키지 만들기
      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp Dockerrun.aws.json deploy/Dockerrun.aws.json
          cd deploy && zip -r deploy.zip .

      # 8. Elastic Beanstalk 배포
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ktb-community-eb
          environment_name: Ktb-community-eb-env
          region: ${{ secrets.AWS_REGION }}
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          deployment_package: deploy/deploy.zip
          existing_bucket_name: elasticbeanstalk-ap-northeast-2-084375543856
